# To change this template, choose Tools | Templates
# and open the template in the editor.

__author__="huziy"
__date__ ="$27 mai 2010 09:46:22$"

from datetime import *

class DataPoint():
    
    def __init__(self):
        self.timeseries = {}
    
    def add_timeseries_data(self, date, value):
        self.timeseries[date] = value

    def get_values_sorted_by_date(self):
        '''
        returns values sorted corresponding to dates
        '''
        result = []
        if len(self.timeseries) == 0:
            return result
        dates = self.timeseries.keys()
        dates.sort()
        for d in dates:
            result.append(self.timeseries[d])
        return result


    def get_dates_sorted(self):
        dates = self.timeseries.keys()
        if len(dates) > 0:
            dates.sort()
        return dates

    def get_monthly_dates_sorted(self):
        result = []
        dates = self.get_dates_sorted()
        month_date = None
        for date in dates:
            if month_date == None or month_date.month != date.month:
               month_date = datetime(year = date.year, month = date.month, day = 1)
               result.append(month_date)
        return result

    def get_monthly_means_sorted_by_date(self):
        '''
        monthly mean values sorted corresponding to date
        '''
        result = []
        dates = self.get_dates_sorted()
        month_date = None
        for date in dates:
            if month_date == None or month_date.month != date.month:
               month_date = datetime(year = date.year, month = date.month, day = 1)
               value = 0.0
               number = 0.0
               result.append(value)
            number += 1.0
            value += self.timeseries[date]
            result[len(result) - 1] = value / number

        assert len(result) == len(self.get_monthly_dates_sorted())
        return result

    def get_values_for_dates(self, dates):
        result = []
        for date in dates:
            the_value = None
            if date in self.timeseries.keys():
                the_value = self.timeseries[date]
            result.append(the_value)
        return result


if __name__ == "__main__":
    print "Hello World"
